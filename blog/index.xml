<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Referential Labs, LLC</title>
    <link>https://referentiallabs.com/blog/</link>
    <description>Recent content in Blogs on Referential Labs, LLC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Apr 2019 18:44:52 -0500</lastBuildDate>
    
	<atom:link href="https://referentiallabs.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Socket Statistics on Linux with ss</title>
      <link>https://referentiallabs.com/blog/2019/04/socket-statistics-linux-ss/</link>
      <pubDate>Wed, 03 Apr 2019 18:44:52 -0500</pubDate>
      
      <guid>https://referentiallabs.com/blog/2019/04/socket-statistics-linux-ss/</guid>
      <description>An excellent tool when you need to troubleshoot distributed systems is ss, which provides visibility into TCP states of your live connections. Even if you know netstat this is a command you should get acquainted with because of its more powerful interface which requires fewer pipes to find the connection information you need and it is probably already installed on your favorite distribution.
In this post, we walk through a couple of examples, and then show a real-world production problem that can be diagnosed by effective use of ss.</description>
    </item>
    
  </channel>
</rss>